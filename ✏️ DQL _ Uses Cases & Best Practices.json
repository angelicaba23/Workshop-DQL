{"version":"7","defaultTimeframe":{"from":"now()-24h","to":"now()"},"defaultSegments":[],"sections":[{"id":"2c2a2267-a1ae-4967-8764-7dd52f3a8154","type":"markdown","markdown":"# DQL Uses Cases & Best Practices\nEste Notebook proporciona documentación y casos de uso con DQL.\n\n**Preguntas o feedback?**: [angelica.barranco@dynatrace.com](mailto:angelica.barranco@dynatrace.com?subject=Feedback%20on%20Grail)\n\nPara obtener más información sobre Dynatrace Query Language (DQL), vaya aquí:\n* [(Doc) Dynatrace Query Language (DQL)](https://docs.dynatrace.com/docs/shortlink/dql-dynatrace-query-language-hub)\n* [(Doc) DQL commands](https://docs.dynatrace.com/docs/shortlink/dql-commands-overview)\n* [(Video) A Practical Guide to DQL](https://www.youtube.com/watch?v=F2VbVqNlswk)\n* [(APP) Learn DQL](https://wkf10640.apps.dynatrace.com/ui/apps/dynatrace.learndql/)"},{"id":"976196de-6d10-4254-a9e2-1b6a8bb15b36","type":"markdown","markdown":"---"},{"id":"db72056e-b69d-4965-a1fb-005a7760ede7","type":"markdown","markdown":"## Como inicio una query?\n\nUna query puede SOLO puede iniciar con un Data source commands. Son **4**:\n* `data` : Genera datos de muestra durante el tiempo de ejecución de la consulta.\n* `describe`: Describe el esquema de datos para un objeto de datos determinado.\n* `fetch`: Carga datos del recurso especificado.\n* `timeseries`: Combina cargar, filtrar y agregar datos de métricas en una salida de time series."},{"id":"0e93b295-ee0f-48fc-852d-3252a300ba26","type":"markdown","markdown":"# [`data`](https://docs.dynatrace.com/docs/shortlink/data-source-commands#data)\n> Genera datos de muestra durante el tiempo de ejecución de la consulta."},{"id":"ef7b540c-043a-4371-b80b-ae2d0f5e298f","type":"markdown","markdown":"🎯 Lista de tipos de datos ingestados en Dynatrace (spans, RUM, bizevents, sythectic). \n* Si esta disponible en Grail `storage.grail = true`.\n* Si esta disponible en almacenamiento clásico `storage.classic = true`."},{"id":"f9f80872-a12f-4c0b-acb5-172030b07df2","type":"dql","title":"Grail data","filterSegments":[],"drilldownPath":[],"height":197,"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-2h","to":"now()"},"value":"data record(data = \"logs\", storage.grail = true),\n     record(data = \"DEM\", storage.grail = true, storage.classic=true, use=true),\n     record(data = \"spans\", storage.grail = true, storage.classic=true, use=true)\n| fieldsAdd use2 = true\n| fieldsRename data, data2"},"visualizationSettings":{"autoSelectVisualization":false,"thresholds":[],"chartSettings":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"visualization":"table","result":{"code":200,"value":{"records":[{"data2":"logs","storage.grail":true,"storage.classic":null,"use":null,"use2":true},{"data2":"DEM","storage.grail":true,"storage.classic":true,"use":true,"use2":true},{"data2":"spans","storage.grail":true,"storage.classic":true,"use":true,"use2":true}],"types":[{"indexRange":[0,2],"mappings":{"data2":{"type":"string"},"storage.grail":{"type":"boolean"},"storage.classic":{"type":"boolean"},"use":{"type":"boolean"},"use2":{"type":"boolean"}}}],"metadata":{"grail":{"canonicalQuery":"data record(data = \"logs\", storage.grail = TRUE), record(data = \"DEM\", storage.grail = TRUE, storage.classic = TRUE, use = TRUE), record(data = \"spans\", storage.grail = TRUE, storage.classic = TRUE, use = TRUE)\n| fieldsAdd use2 = TRUE\n| fieldsRename data2 = data","timezone":"America/Bogota","query":"data record(data = \"logs\", storage.grail = true),\n     record(data = \"DEM\", storage.grail = true, storage.classic=true, use=true),\n     record(data = \"spans\", storage.grail = true, storage.classic=true, use=true)\n| fieldsAdd use2 = true\n| fieldsRename data, data2","scannedRecords":0,"dqlVersion":"V1_0","scannedBytes":0,"scannedDataPoints":0,"locale":"en-US","executionTimeMilliseconds":3,"notifications":[],"queryId":"62c6b9b0-3657-4ec3-a3e4-45ddafc96cac","sampled":false}}},"notifications":[],"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"dateTime":"2025-10-08T13:32:41.079Z","input":{"timeframe":{"from":"now()-2h","to":"now()"},"value":"data record(data = \"logs\", storage.grail = true),\n     record(data = \"DEM\", storage.grail = true, storage.classic=true, use=true),\n     record(data = \"spans\", storage.grail = true, storage.classic=true, use=true)\n| fieldsAdd use2 = true\n| fieldsRename data, data2"}},"state":"success","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"d46e0cac-8c3e-4013-9296-1811aabf0672","type":"markdown","markdown":"# [`describe`](https://docs.dynatrace.com/docs/shortlink/data-source-commands#describe)\n> Describe el esquema de datos para un objeto de datos determinado."},{"id":"72da8832-4cf5-4afa-acd7-fc44f7251d5e","type":"markdown","markdown":"🎯 Cuantas propiedades/fields conocidos tienen los `host` en este ambiente? Y listar por orden alfabetico.\n\n*Hints:*\n* Usar [Ordering commands](https://docs.dynatrace.com/docs/shortlink/ordering-commands)"},{"id":"a1e1d2f8-b07e-4bf9-a78c-b21802cfba63","type":"dql","filterSegments":[],"drilldownPath":[],"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-2h","to":"now()"},"value":"describe dt.entity.host"},"visualizationSettings":{"autoSelectVisualization":false,"thresholds":[],"chartSettings":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"visualization":"recordView","result":{"code":200,"value":{"records":[{"field":"dt.system.table","data_types":["string"]},{"field":"dt.system.environment","data_types":["string"]},{"field":"lifetime","data_types":["timeframe"]},{"field":"bitness","data_types":["string"]},{"field":"belongs_to","data_types":["record"]},{"field":"autoInjection","data_types":["string"]},{"field":"additionalSystemInfo","data_types":["record"]},{"field":"gcpZone","data_types":["string"]},{"field":"dnsNames","data_types":["array"]},{"field":"softwareTechnologies","data_types":["array"]},{"field":"gceProjectId","data_types":["string"]},{"field":"paasVendorType","data_types":["string"]},{"field":"customHostMetadata","data_types":["array"]},{"field":"installerPotentialProblem","data_types":["boolean"]},{"field":"entity.name","data_types":["string"]},{"field":"id","data_types":["string"]},{"field":"state","data_types":["string"]},{"field":"zosVirtualization","data_types":["string"]},{"field":"customIconPath","data_types":["string"]},{"field":"entity.conditional_name","data_types":["string"]},{"field":"hosts","data_types":["record"]},{"field":"standalone","data_types":["boolean"]},{"field":"azureSku","data_types":["string"]},{"field":"gceHostName","data_types":["string"]},{"field":"hypervisorType","data_types":["string"]},{"field":"boshName","data_types":["string"]},{"field":"standaloneSpecialAgentsOnly","data_types":["boolean"]},{"field":"tags","data_types":["array"]},{"field":"contains","data_types":["record"]},{"field":"gcePublicIpAddresses","data_types":["array"]},{"field":"paasMemoryLimit","data_types":["long"]},{"field":"memoryTotal","data_types":["long"]},{"field":"boshDeploymentId","data_types":["string"]},{"field":"installerSupportAlert","data_types":["boolean"]},{"field":"gceMachineType","data_types":["string"]},{"field":"installerTrackedDownload","data_types":["boolean"]},{"field":"gceInstanceId","data_types":["string"]},{"field":"runs_on","data_types":["record"]},{"field":"kubernetesLabels","data_types":["record"]},{"field":"icon","data_types":["record"]},{"field":"logPathLastUpdate","data_types":["record"]},{"field":"monitored_by","data_types":["record"]},{"field":"osVersion","data_types":["string"]},{"field":"macAddresses","data_types":["array"]},{"field":"zosCPUModelNumber","data_types":["string"]},{"field":"azureSiteNames","data_types":["array"]},{"field":"azureZone","data_types":["string"]},{"field":"installerVersion","data_types":["string"]},{"field":"boshAvailabilityZone","data_types":["string"]},{"field":"azureResourceGroupName","data_types":["string"]},{"field":"calls","data_types":["record"]},{"field":"cloudPlatformVendorVersion","data_types":["string"]},{"field":"instance_of","data_types":["record"]},{"field":"zosTotalPhysicalMemory","data_types":["long"]},{"field":"simultaneousMultithreading","data_types":["long"]},{"field":"runs","data_types":["record"]},{"field":"azureHostNames","data_types":["array"]},{"field":"monitoringMode","data_types":["string"]},{"field":"ebpfHasPublicTraffic","data_types":["boolean"]},{"field":"azureVmScaleSetName","data_types":["string"]},{"field":"same_as","data_types":["record"]},{"field":"osArchitecture","data_types":["string"]},{"field":"logFileStatus","data_types":["record"]},{"field":"zosSystemName","data_types":["string"]},{"field":"boshInstanceId","data_types":["string"]},{"field":"boshStemcellVersion","data_types":["string"]},{"field":"kubernetesClusterName","data_types":["string"]},{"field":"cloudType","data_types":["string"]},{"field":"entity.detected_name","data_types":["string"]},{"field":"clustered_by","data_types":["record"]},{"field":"physicalMemory","data_types":["long"]},{"field":"hasPublicTraffic","data_types":["boolean"]},{"field":"ipAddress","data_types":["array"]},{"field":"called_by","data_types":["record"]},{"field":"virtualCpus","data_types":["long"]},{"field":"zosTotalZiipProcessors","data_types":["long"]},{"field":"logicalCpus","data_types":["long"]},{"field":"hostGroupName","data_types":["string"]},{"field":"networkZone","data_types":["string"]},{"field":"logicalCpuCores","data_types":["long"]},{"field":"isMonitoringCandidate","data_types":["boolean"]},{"field":"cpuCores","data_types":["long"]},{"field":"ebpfDiscoveryMonitored","data_types":["boolean"]},{"field":"azureComputeModeName","data_types":["string"]},{"field":"osServices","data_types":["array"]},{"field":"zosLparName","data_types":["string"]},{"field":"managementZones","data_types":["array"]},{"field":"entity.type","data_types":["string"]},{"field":"osType","data_types":["string"]},{"field":"azureVmSizeLabel","data_types":["string"]},{"field":"logSourceState","data_types":["record"]},{"field":"zosCPUSerialNumber","data_types":["string"]},{"field":"boshInstanceName","data_types":["string"]},{"field":"oneAgentCustomHostName","data_types":["string"]},{"field":"zosTotalGeneralPurposeProcessors","data_types":["long"]},{"field":"gceInstanceName","data_types":["string"]},{"field":"azureEnvironment","data_types":["string"]},{"field":"entity.customized_name","data_types":["string"]},{"field":"gceNumericProjectId","data_types":["string"]},{"field":"accessible_by","data_types":["record"]},{"field":"dt.security_context","data_types":["array"]},{"field":"awsNameTag","data_types":["string"]}],"types":[{"indexRange":[0,101],"mappings":{"field":{"type":"string"},"data_types":{"type":"array","types":[{"indexRange":[0,0],"mappings":{"element":{"type":"string"}}}]}}}],"metadata":{"grail":{"canonicalQuery":"describe dt.entity.host","timezone":"America/Bogota","query":"describe dt.entity.host","scannedRecords":0,"dqlVersion":"V1_0","scannedBytes":0,"scannedDataPoints":0,"analysisTimeframe":{"start":"2025-10-08T11:32:40.459000000Z","end":"2025-10-08T13:32:40.459000000Z"},"locale":"en-US","executionTimeMilliseconds":9,"notifications":[],"queryId":"cf756a9d-caff-4244-9f53-6502ef8832ad","sampled":false}}},"notifications":[],"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"dateTime":"2025-10-08T13:32:41.315Z","input":{"timeframe":{"from":"now()-2h","to":"now()"},"value":"describe dt.entity.host"}},"state":"success","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"9e0e3516-8596-4231-b594-e5f58af79503","type":"markdown","markdown":"# [`fetch`](https://docs.dynatrace.com/docs/shortlink/data-source-commands#fetch)\n> Carga datos del recurso especificado."},{"id":"f86645d4-c0fb-4195-9015-9d868124e2ee","type":"markdown","markdown":"🎯 Listar los host. Mostar solo `nombre`, `ip` y `tags`.\n\n*Hints:*\n* Usar el resultado de la query anterior.\n* Usar [`Selection and modification commands`](https://docs.dynatrace.com/docs/shortlink/selection-and-modification-commands)"},{"id":"2d2c155f-8b8b-4079-ab98-aae756d3f53f","type":"dql","filterSegments":[],"drilldownPath":[],"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-2h","to":"now()"},"value":""},"visualizationSettings":{"chartSettings":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"visualization":"table","result":{"value":{"error":{"message":"PARSE_ERROR","details":{"exceptionType":"DQL-ERROR-PARSING","syntaxErrorPosition":{"start":{"column":1,"index":0,"line":1},"end":{"column":0,"index":-1,"line":1}},"errorType":"PARSE_ERROR","errorMessage":"The end of the query isn't allowed here. Please check the autocomplete suggestions before the error for alternative options.","arguments":["The end of the query"],"queryString":"","errorMessageFormatSpecifierTypes":["INPUT_QUERY_PART"],"errorMessageFormat":"%1$s isn't allowed here. Please check the autocomplete suggestions before the error for alternative options.","queryId":"1437ef71-fd17-444c-a485-ff43c795086d"},"code":400}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"code":400,"error":"The end of the query isn't allowed here. Please check the autocomplete suggestions before the error for alternative options.","notifications":[],"dateTime":"2025-10-08T13:32:40.948Z","input":{"timeframe":{"from":"now()-2h","to":"now()"},"value":""}},"state":"error","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"eeedfb24-713d-4595-9ddb-7f31a64a241d","type":"markdown","markdown":"# [`timeseries`](https://docs.dynatrace.com/docs/shortlink/data-source-commands#fetch)\n> Cargar, filtrar y agregar datos de métricas en una salida de time series."},{"id":"7bea84a9-8e63-4445-a4d6-0c37c4b097ce","type":"markdown","markdown":"🎯 Tiempo del tiempo de respuesta promedio (ms) del servicio con mayor cantidad de peticiones de las últimas 24h.\n\n*Hints:*\n* Usar [Array functions](https://docs.dynatrace.com/docs/shortlink/array-functions)\n* `dt.service.request.count` y `dt.service.request.response_time`"},{"id":"d7035d8e-137a-4c82-a859-68822fcbd1d8","type":"dql","filterSegments":[],"drilldownPath":[],"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-24h","to":"now()"},"value":"\n"},"visualizationSettings":{"chartSettings":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"visualization":"table","result":{"value":{"error":{"message":"PARSE_ERROR","details":{"exceptionType":"DQL-ERROR-PARSING","syntaxErrorPosition":{"start":{"column":1,"index":1,"line":2},"end":{"column":1,"index":0,"line":1}},"errorType":"PARSE_ERROR","errorMessage":"The end of the query isn't allowed here. Please check the autocomplete suggestions before the error for alternative options.","arguments":["The end of the query"],"queryString":"\n","errorMessageFormatSpecifierTypes":["INPUT_QUERY_PART"],"errorMessageFormat":"%1$s isn't allowed here. Please check the autocomplete suggestions before the error for alternative options.","queryId":"ce3da44c-128c-4d15-8437-f71137897226"},"code":400}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"code":400,"error":"The end of the query isn't allowed here. Please check the autocomplete suggestions before the error for alternative options.","notifications":[],"dateTime":"2025-10-08T13:32:40.958Z","input":{"timeframe":{"from":"now()-24h","to":"now()"},"value":"\n"}},"state":"error","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"8a20572b-e028-4cde-bc0a-b8b17c1d4ba3","type":"markdown","markdown":"## Best Practices"},{"id":"1aa04902-6abe-4390-b268-f01dac264f03","type":"markdown","markdown":"# 1. Filtar al inicio.\n"},{"id":"41d33ccb-b477-4496-9360-be92f1ac4955","type":"markdown","markdown":">  ⌛ El **rendimiento** general de las consultas mejora enormemente al reducir el conjunto de datos antes de continuar con el procesamiento. \n\n> 💰 Segmentar la data para filtar por `dt.system.bucket`  y reducir el costo de la query."},{"id":"794c8c86-d47a-49fe-a402-3da28b71479d","type":"dql","filterSegments":[],"drilldownPath":[],"height":84,"showInput":true,"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-30d","to":"now()"},"value":"fetch events\n| filter event.kind == \"SYNTHETIC_EVENT\"\n| summarize count = count(), by:{event.type,event.kind }"},"visualizationSettings":{"autoSelectVisualization":false,"thresholds":[],"chartSettings":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"visualization":"table","result":{"code":200,"value":{"records":[{"event.type":"batch_status","event.kind":"SYNTHETIC_EVENT","count":"5827"},{"event.type":"browser_monitor_execution","event.kind":"SYNTHETIC_EVENT","count":"5803"},{"event.type":"http_monitor_execution","event.kind":"SYNTHETIC_EVENT","count":"77572"},{"event.type":"http_step_execution","event.kind":"SYNTHETIC_EVENT","count":"77574"},{"event.type":"http_step_execution_details","event.kind":"SYNTHETIC_EVENT","count":"77574"},{"event.type":"network_availability_monitor_execution","event.kind":"SYNTHETIC_EVENT","count":"3"},{"event.type":"on_demand_execution","event.kind":"SYNTHETIC_EVENT","count":"17420"}],"types":[{"indexRange":[0,6],"mappings":{"event.type":{"type":"string"},"event.kind":{"type":"string"},"count":{"type":"long"}}}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.kind == \"SYNTHETIC_EVENT\"\n| summarize by:{event.type, event.kind}, count = count()","timezone":"America/Bogota","query":"fetch events\n| filter event.kind == \"SYNTHETIC_EVENT\"\n| summarize count = count(), by:{event.type,event.kind }","scannedRecords":9705725,"dqlVersion":"V1_0","scannedBytes":2012612192,"scannedDataPoints":0,"analysisTimeframe":{"start":"2025-09-08T13:32:40.473000000Z","end":"2025-10-08T13:32:40.473000000Z"},"locale":"en-US","executionTimeMilliseconds":500,"notifications":[],"queryId":"c99d4a7d-9b35-4617-9a9a-af9df1f67d83","sampled":false}}},"notifications":[],"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"dateTime":"2025-10-08T13:32:42.034Z","input":{"timeframe":{"from":"now()-30d","to":"now()"},"value":"fetch events\n| filter event.kind == \"SYNTHETIC_EVENT\"\n| summarize count = count(), by:{event.type,event.kind }"}},"state":"success","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"341c10b3-dbdc-4f9f-9a74-3865d73832de","type":"dql","filterSegments":[],"drilldownPath":[],"height":96,"showInput":true,"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-30d","to":"now()"},"value":"fetch events\n| filter dt.system.bucket ==\"default_synthetic_events\"\n| filter event.kind == \"SYNTHETIC_EVENT\"\n| summarize count = count(), by:{event.type}"},"visualizationSettings":{"autoSelectVisualization":false,"thresholds":[],"chartSettings":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"visualization":"table","result":{"code":200,"value":{"records":[{"event.type":"batch_status","count":"5827"},{"event.type":"browser_monitor_execution","count":"5803"},{"event.type":"http_monitor_execution","count":"77572"},{"event.type":"http_step_execution","count":"77574"},{"event.type":"network_availability_monitor_execution","count":"3"},{"event.type":"on_demand_execution","count":"17420"}],"types":[{"indexRange":[0,5],"mappings":{"event.type":{"type":"string"},"count":{"type":"long"}}}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter dt.system.bucket == \"default_synthetic_events\"\n| filter event.kind == \"SYNTHETIC_EVENT\"\n| summarize by:{event.type}, count = count()","timezone":"America/Bogota","query":"fetch events\n| filter dt.system.bucket ==\"default_synthetic_events\"\n| filter event.kind == \"SYNTHETIC_EVENT\"\n| summarize count = count(), by:{event.type}","scannedRecords":185009,"dqlVersion":"V1_0","scannedBytes":234423489,"scannedDataPoints":0,"analysisTimeframe":{"start":"2025-09-08T13:32:40.479000000Z","end":"2025-10-08T13:32:40.479000000Z"},"locale":"en-US","executionTimeMilliseconds":337,"notifications":[],"queryId":"d3a37d49-ba3d-4995-adb0-52c745b0bb7e","sampled":false}}},"notifications":[],"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"dateTime":"2025-10-08T13:32:42.078Z","input":{"timeframe":{"from":"now()-30d","to":"now()"},"value":"fetch events\n| filter dt.system.bucket ==\"default_synthetic_events\"\n| filter event.kind == \"SYNTHETIC_EVENT\"\n| summarize count = count(), by:{event.type}"}},"state":"success","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"a60ea9e7-605e-48a7-be89-a718378698a0","type":"markdown","markdown":"# 2. Reducir el rango de tiempo de consulta (si aplica)"},{"id":"c9162be4-8de2-4970-bdfc-86e148be5c76","type":"markdown","markdown":"> ⌛💰 De esta forma se escanea menos data y reduce el costo de la query."},{"id":"e3353a4d-8ba6-44e9-a409-876d3ba503d9","type":"markdown","markdown":"# 3. Nombres de campos que se deben evitar\n* true\n* false\n* null\n* mod\n* and\n* or\n* xor\n* not\n"},{"id":"1f56b063-7712-405f-83c6-bbe55caf9f75","type":"dql","title":"❌","filterSegments":[],"drilldownPath":[],"height":77,"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-24h","to":"now()"},"value":"data record(`true`=\"ejemplo\")"},"visualizationSettings":{"autoSelectVisualization":false,"thresholds":[],"chartSettings":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"visualization":"table","result":{"value":{"records":[{"true":"ejemplo"}],"types":[{"indexRange":[0,0],"mappings":{"true":{"type":"string"}}}],"metadata":{"grail":{"canonicalQuery":"data record(`true` = \"ejemplo\")","timezone":"America/Bogota","query":"data record(`true`=\"ejemplo\")","scannedRecords":0,"dqlVersion":"V1_0","scannedBytes":0,"scannedDataPoints":0,"locale":"en-US","executionTimeMilliseconds":2,"notifications":[],"queryId":"a02b8f47-ec0a-4795-9181-c32cfbbb1f5f","sampled":false}}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"code":200,"notifications":[],"dateTime":"2025-10-08T13:32:41.160Z","input":{"timeframe":{"from":"now()-24h","to":"now()"},"value":"data record(`true`=\"ejemplo\")"}},"state":"success","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"a2508b2e-2c85-47f6-b272-5a7718db3764","type":"markdown","markdown":"## 4. Usar métricas\n> 💰 Si la data ya esta ingestada como métrica, usala.\n\n> 💰 Si utilizas comandos `summarize` o `makeTimeseries` crea métricas a a partir de logs, events, etc."},{"id":"469934ff-ffee-45ac-b356-2ea8d65373ec","type":"markdown","markdown":"## 5. Utilizar opciones para limitar la cantidad de datos escaneados (Logs | Spans⚠️)\n"},{"id":"eaa43610-37e6-469d-92d6-12656e6aba65","type":"dql","title":" exception message","filterSegments":[],"drilldownPath":[],"height":374,"showInput":true,"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-24h","to":"now()"},"value":"fetch spans\n\n// only spans which contain a span event of type \"exception\"\n| filter iAny(span.events[][span_event.name] == \"exception\")\n| expand span.events | fields span.events | fieldsFlatten span.events | fieldsRemove span.events\n\n| summarize count = count(), by:{ span.events.exception.message}\n| sort count desc\n| limit 10"},"visualizationSettings":{"chartSettings":{"truncationMode":"middle","categoryOverrides":{},"categoricalBarChartSettings":{"valueAxis":["count"],"valueAxisLabel":"count","categoryAxis":["span.events.exception.message"],"categoryAxisLabel":"span.events.exception.message"},"circleChartSettings":{"valueType":"relative","groupingThresholdType":"relative"}},"autoSelectVisualization":false,"thresholds":[]},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"visualization":"donutChart","result":{"code":200,"value":{"records":[{"span.events.exception.message":"13 INTERNAL: failed to charge card: could not charge the card: rpc error: code = Unknown desc = PaymentService Fail Feature Flag Enabled","count":"20827"},{"span.events.exception.message":"Since symfony/http-foundation 5.1: Passing a non-scalar value as 2nd argument to \"Symfony\\Component\\HttpFoundation\\InputBag::get()\" is deprecated, pass a scalar or null instead.","count":"14470"},{"span.events.exception.message":"HTTP 404 setStatus called","count":"9478"},{"span.events.exception.message":"Since symfony/http-foundation 5.1: Retrieving a non-scalar value from \"Symfony\\Component\\HttpFoundation\\InputBag::get()\" is deprecated, and will throw a \"Symfony\\Component\\HttpFoundation\\Exception\\BadRequestException\" exception in Symfony 6.0, use \"S","count":"6781"},{"span.events.exception.message":"PaymentService Fail Feature Flag Enabled","count":"4817"},{"span.events.exception.message":"13 INTERNAL: failed to charge card: could not charge the card: rpc error: code = Unknown desc = Sorry, we cannot process American Express credit cards. Only Visa or Mastercard are accepted.","count":"1743"},{"span.events.exception.message":"DEADLINE_EX<masked> CallOptions deadline exceeded after <masked>s. Name resolution delay <masked> seconds. [closed=[], open=[[wait_for_ready, Last Pick Failure=Status{code=UNAVAILABLE, description=io exception, cause=io.netty.channel.AbstractCha","count":"1624"},{"span.events.exception.message":"Sorry, we cannot process American Express credit cards. Only Visa or Mastercard are accepted.","count":"1162"},{"span.events.exception.message":"Credit card info is invalid","count":"1093"},{"span.events.exception.message":"failed to charge card: could not charge the card: rpc error: code = Code(400) desc = Credit card info is invalid","count":"1093"}],"types":[{"indexRange":[0,9],"mappings":{"span.events.exception.message":{"type":"string"},"count":{"type":"long"}}}],"metadata":{"grail":{"canonicalQuery":"fetch spans\n| filter iAny(span.events[][span_event.name] == \"exception\")\n| expand span.events\n| fields span.events\n| fieldsFlatten span.events\n| fieldsRemove span.events\n| summarize by:{span.events.exception.message}, count = count()\n| sort count desc\n| limit 10","timezone":"America/Bogota","query":"fetch spans\n\n// only spans which contain a span event of type \"exception\"\n| filter iAny(span.events[][span_event.name] == \"exception\")\n| expand span.events | fields span.events | fieldsFlatten span.events | fieldsRemove span.events\n\n| summarize count = count(), by:{ span.events.exception.message}\n| sort count desc\n| limit 10","scannedRecords":78840821,"dqlVersion":"V1_0","scannedBytes":12647727418,"scannedDataPoints":0,"analysisTimeframe":{"start":"2025-10-07T13:34:50.485000000Z","end":"2025-10-08T13:34:50.485000000Z"},"locale":"en-US","executionTimeMilliseconds":91,"notifications":[],"queryId":"f07d8551-564c-4c13-9ac3-1f431cea6ede","sampled":false}}},"notifications":[],"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"dateTime":"2025-10-08T13:34:50.915Z","input":{"timeframe":{"from":"now()-24h","to":"now()"},"value":"fetch spans\n\n// only spans which contain a span event of type \"exception\"\n| filter iAny(span.events[][span_event.name] == \"exception\")\n| expand span.events | fields span.events | fieldsFlatten span.events | fieldsRemove span.events\n\n| summarize count = count(), by:{ span.events.exception.message}\n| sort count desc\n| limit 10"}},"state":"success","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"b87431d3-7663-4c61-b970-d0be2eead153","type":"dql","title":"exception message","filterSegments":[],"drilldownPath":[],"height":374,"showInput":true,"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-24h","to":"now()"},"value":"fetch spans, scanLimitGBytes:1\n\n// only spans which contain a span event of type \"exception\"\n| filter iAny(span.events[][span_event.name] == \"exception\")\n| expand span.events | fields span.events | fieldsFlatten span.events | fieldsRemove span.events\n\n| summarize count = count(), by:{ span.events.exception.message}\n| sort count desc\n| limit 10"},"visualizationSettings":{"chartSettings":{"truncationMode":"middle","categoryOverrides":{},"categoricalBarChartSettings":{"valueAxis":["count"],"valueAxisLabel":"count","categoryAxis":["span.events.exception.message"],"categoryAxisLabel":"span.events.exception.message"},"circleChartSettings":{"valueType":"relative","groupingThresholdType":"relative"}},"autoSelectVisualization":false,"thresholds":[]},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":true},"visualization":"donutChart","result":{"code":200,"value":{"records":[{"span.events.exception.message":"13 INTERNAL: failed to charge card: could not charge the card: rpc error: code = Unknown desc = PaymentService Fail Feature Flag Enabled","count":"1888"},{"span.events.exception.message":"Since symfony/http-foundation 5.1: Passing a non-scalar value as 2nd argument to \"Symfony\\Component\\HttpFoundation\\InputBag::get()\" is deprecated, pass a scalar or null instead.","count":"1320"},{"span.events.exception.message":"HTTP 404 setStatus called","count":"866"},{"span.events.exception.message":"Since symfony/http-foundation 5.1: Retrieving a non-scalar value from \"Symfony\\Component\\HttpFoundation\\InputBag::get()\" is deprecated, and will throw a \"Symfony\\Component\\HttpFoundation\\Exception\\BadRequestException\" exception in Symfony 6.0, use \"S","count":"620"},{"span.events.exception.message":"PaymentService Fail Feature Flag Enabled","count":"439"},{"span.events.exception.message":"13 INTERNAL: failed to charge card: could not charge the card: rpc error: code = Unknown desc = Sorry, we cannot process American Express credit cards. Only Visa or Mastercard are accepted.","count":"141"},{"span.events.exception.message":"Sorry, we cannot process American Express credit cards. Only Visa or Mastercard are accepted.","count":"125"},{"span.events.exception.message":"Credit card info is invalid","count":"122"},{"span.events.exception.message":"DEADLINE_EX<masked> CallOptions deadline exceeded after <masked>s. Name resolution delay <masked> seconds. [closed=[], open=[[wait_for_ready, Last Pick Failure=Status{code=UNAVAILABLE, description=io exception, cause=io.netty.channel.AbstractCha","count":"117"},{"span.events.exception.message":"failed to charge card: could not charge the card: rpc error: code = Code(400) desc = Credit card info is invalid","count":"103"}],"types":[{"indexRange":[0,9],"mappings":{"span.events.exception.message":{"type":"string"},"count":{"type":"long"}}}],"metadata":{"grail":{"canonicalQuery":"fetch spans, scanLimitGBytes:1\n| filter iAny(span.events[][span_event.name] == \"exception\")\n| expand span.events\n| fields span.events\n| fieldsFlatten span.events\n| fieldsRemove span.events\n| summarize by:{span.events.exception.message}, count = count()\n| sort count desc\n| limit 10","timezone":"America/Bogota","query":"fetch spans, scanLimitGBytes:1\n\n// only spans which contain a span event of type \"exception\"\n| filter iAny(span.events[][span_event.name] == \"exception\")\n| expand span.events | fields span.events | fieldsFlatten span.events | fieldsRemove span.events\n\n| summarize count = count(), by:{ span.events.exception.message}\n| sort count desc\n| limit 10","scannedRecords":7974103,"dqlVersion":"V1_0","scannedBytes":1000000000,"scannedDataPoints":0,"analysisTimeframe":{"start":"2025-10-07T13:34:43.908000000Z","end":"2025-10-08T13:34:43.908000000Z"},"locale":"en-US","executionTimeMilliseconds":53,"notifications":[{"severity":"WARNING","messageFormat":"Your execution was stopped after %1$s gigabytes of data were scanned. Use the \"scanLimitGBytes\" parameter in the fetch command to adjust the limit. Note: If it's set to -1 no limit is applied. This can result in potentially higher costs and durations.","messageFormatSpecifierTypes":["NUMBER"],"arguments":["1"],"notificationType":"SCAN_LIMIT_GBYTES","message":"Your execution was stopped after 1 gigabytes of data were scanned. Use the \"scanLimitGBytes\" parameter in the fetch command to adjust the limit. Note: If it's set to -1 no limit is applied. This can result in potentially higher costs and durations."}],"queryId":"f1f69333-3fbe-463d-92fd-5b1e2e82436c","sampled":true}}},"notifications":[{"severity":"warning","messageFormat":"Your execution was stopped after %1$s gigabytes of data were scanned. Use the \"scanLimitGBytes\" parameter in the fetch command to adjust the limit. Note: If it's set to -1 no limit is applied. This can result in potentially higher costs and durations.","messageFormatSpecifierTypes":["NUMBER"],"arguments":["1"],"notificationType":"SCAN_LIMIT_GBYTES","message":"Your execution was stopped after 1 gigabytes of data were scanned. Use the \"scanLimitGBytes\" parameter in the fetch command to adjust the limit. Note: If it's set to -1 no limit is applied. This can result in potentially higher costs and durations."}],"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":true},"dateTime":"2025-10-08T13:34:44.338Z","input":{"timeframe":{"from":"now()-24h","to":"now()"},"value":"fetch spans, scanLimitGBytes:1\n\n// only spans which contain a span event of type \"exception\"\n| filter iAny(span.events[][span_event.name] == \"exception\")\n| expand span.events | fields span.events | fieldsFlatten span.events | fieldsRemove span.events\n\n| summarize count = count(), by:{ span.events.exception.message}\n| sort count desc\n| limit 10"}},"state":"success","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"b6aa802b-3baa-44b7-810f-416b564ba287","type":"markdown","markdown":"## 6. Utilizar las opciones de muestreo disponibles (Logs | Spans⚠️)\nLos rangos de valores aplicables para el muestreo son:\n\n* 1: Default value (no sampling).\n* 10\n* 100\n* 1000\n* 10000: "},{"id":"e277143f-5c48-40c8-ba49-bd9086a90d78","type":"dql","filterSegments":[],"drilldownPath":[],"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-24h","to":"now()"},"value":"fetch logs, from:-1d, samplingRatio:100\n| summarize c = countIf(loglevel == \"ERROR\"), by:bin(timestamp, 3h)"},"visualizationSettings":{"chartSettings":{"truncationMode":"middle","fieldMapping":{"leftAxisValues":["c"],"timestamp":"bin(timestamp, 3h)"}},"dataMapping":{"displayedFields":["c"]},"autoSelectVisualization":false,"thresholds":[]},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"visualization":"lineChart","result":{"code":200,"value":{"records":[{"bin(timestamp, 3h)":"2025-10-07T07:00:00.000000000-05:00","c":"340"},{"bin(timestamp, 3h)":"2025-10-07T10:00:00.000000000-05:00","c":"733"},{"bin(timestamp, 3h)":"2025-10-07T13:00:00.000000000-05:00","c":"792"},{"bin(timestamp, 3h)":"2025-10-07T16:00:00.000000000-05:00","c":"744"},{"bin(timestamp, 3h)":"2025-10-07T19:00:00.000000000-05:00","c":"821"},{"bin(timestamp, 3h)":"2025-10-07T22:00:00.000000000-05:00","c":"770"},{"bin(timestamp, 3h)":"2025-10-08T01:00:00.000000000-05:00","c":"753"},{"bin(timestamp, 3h)":"2025-10-08T04:00:00.000000000-05:00","c":"718"},{"bin(timestamp, 3h)":"2025-10-08T07:00:00.000000000-05:00","c":"403"}],"types":[{"indexRange":[0,8],"mappings":{"bin(timestamp, 3h)":{"type":"timestamp"},"c":{"type":"long"}}}],"metadata":{"grail":{"canonicalQuery":"fetch logs, from:-1d, samplingRatio:100\n| summarize by:{bin(timestamp, 3h)}, c = countIf(loglevel == \"ERROR\")","timezone":"America/Bogota","query":"fetch logs, from:-1d, samplingRatio:100\n| summarize c = countIf(loglevel == \"ERROR\"), by:bin(timestamp, 3h)","scannedRecords":1119246,"dqlVersion":"V1_0","scannedBytes":2414560720,"scannedDataPoints":0,"analysisTimeframe":{"start":"2025-10-07T13:35:58.541671973Z","end":"2025-10-08T13:35:58.541671973Z"},"locale":"en-US","executionTimeMilliseconds":716,"notifications":[{"severity":"INFO","messageFormat":"The parameters should be grouped with curly braces: {}.","syntaxPosition":{"start":{"column":50,"index":89,"line":2},"end":{"column":67,"index":106,"line":2}},"messageFormatSpecifierTypes":[],"arguments":[],"notificationType":"PARAMETERS_SHOULD_BE_GROUPED","message":"The parameters should be grouped with curly braces: {}."}],"queryId":"b0c9f101-d129-41cb-9499-fc82bd04f1f7","sampled":true}}},"notifications":[{"severity":"info","messageFormat":"The parameters should be grouped with curly braces: {}.","syntaxPosition":{"start":{"column":50,"index":89,"line":2},"end":{"column":67,"index":106,"line":2}},"messageFormatSpecifierTypes":[],"arguments":[],"notificationType":"PARAMETERS_SHOULD_BE_GROUPED","message":"The parameters should be grouped with curly braces: {}."}],"dateTime":"2025-10-08T13:35:59.520Z","input":{"timeframe":{"from":"now()-24h","to":"now()"},"value":"fetch logs, from:-1d, samplingRatio:100\n| summarize c = countIf(loglevel == \"ERROR\"), by:bin(timestamp, 3h)"},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false}},"state":"success","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"2f8a2de2-8429-4a4c-8324-ae4535ecd08b","type":"markdown","markdown":"## Learn DQL\n![](https://immebwtyjeilyl2quwb2kuo47pblazdk--wkf10640.prod2.apps.dynatrace.com/ui/assets/learn-dql-logo.svg)\n\n[Ir a la APP](https://wkf10640.apps.dynatrace.com/ui/apps/dynatrace.learndql/)"},{"id":"c7e9ddd0-da81-4da8-83c4-69ad80c05e85","type":"markdown","markdown":"---\n**Preguntas o feedback?**: [angelica.barranco@dynatrace.com](mailto:angelica.barranco@dynatrace.com?subject=Feedback%20on%20Grail)\n\nPara obtener más información sobre Dynatrace Query Language (DQL), vaya aquí:\n* [(Doc) Dynatrace Query Language (DQL)](https://docs.dynatrace.com/docs/shortlink/dql-dynatrace-query-language-hub)\n* [(Doc) DQL commands](https://docs.dynatrace.com/docs/shortlink/dql-commands-overview)\n* [(Video) A Practical Guide to DQL](https://www.youtube.com/watch?v=F2VbVqNlswk)\n* [(APP) Learn DQL](https://wkf10640.apps.dynatrace.com/ui/apps/dynatrace.learndql/)"}]}