{"version":"7","defaultTimeframe":{"from":"now()-30m","to":"now()"},"defaultSegments":[],"sections":[{"id":"2c2a2267-a1ae-4967-8764-7dd52f3a8154","type":"markdown","markdown":"# DQL Uses Cases & Best Practices\nEste Notebook proporciona documentación y casos de uso con DQL.\n\n**Preguntas o feedback?**: [angelica.barranco@dynatrace.com](mailto:angelica.barranco@dynatrace.com?subject=Feedback%20on%20Grail)\n\nPara obtener más información sobre Dynatrace Query Language (DQL), vaya aquí:\n* [(Doc) Dynatrace Query Language (DQL)](https://docs.dynatrace.com/docs/shortlink/dql-dynatrace-query-language-hub)\n* [(Doc) DQL commands](https://docs.dynatrace.com/docs/shortlink/dql-commands-overview)\n* [(Video) A Practical Guide to DQL](https://www.youtube.com/watch?v=F2VbVqNlswk)\n* [(APP) Learn DQL](https://wkf10640.apps.dynatrace.com/ui/apps/dynatrace.learndql/)"},{"id":"976196de-6d10-4254-a9e2-1b6a8bb15b36","type":"markdown","markdown":"---"},{"id":"db72056e-b69d-4965-a1fb-005a7760ede7","type":"markdown","markdown":"## Como inicio una query?\n\nUna query puede SOLO puede iniciar con un Data source commands. Son **4**:\n* `data` : Genera datos de muestra durante el tiempo de ejecución de la consulta.\n* `describe`: Describe el esquema de datos para un objeto de datos determinado.\n* `fetch`: Carga datos del recurso especificado.\n* `timeseries`: Combina cargar, filtrar y agregar datos de métricas en una salida de time series."},{"id":"0e93b295-ee0f-48fc-852d-3252a300ba26","type":"markdown","markdown":"# [`data`](https://docs.dynatrace.com/docs/shortlink/data-source-commands#data)\n> Genera datos de muestra durante el tiempo de ejecución de la consulta."},{"id":"ef7b540c-043a-4371-b80b-ae2d0f5e298f","type":"markdown","markdown":"🎯 Lista de tipos de datos ingestados en Dynatrace (spans, RUM, bizevents, sythectic). \n* Si esta disponible en Grail `storage.grail = true`.\n* Si esta disponible en almacenamiento clásico `storage.classic = true`."},{"id":"f9f80872-a12f-4c0b-acb5-172030b07df2","type":"dql","title":"Grail data","filterSegments":[],"drilldownPath":[],"height":197,"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-2h","to":"now()"},"value":"data record(data = \"logs\", storage.grail = true),\n     record(data = \"DEM\", storage.grail = true, storage.classic=true)"},"visualizationSettings":{"autoSelectVisualization":false,"thresholds":[],"chartSettings":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"visualization":"table","result":{"code":200,"value":{"records":[{"data":"logs","storage.grail":true,"storage.classic":null},{"data":"DEM","storage.grail":true,"storage.classic":true}],"types":[{"indexRange":[0,1],"mappings":{"data":{"type":"string"},"storage.grail":{"type":"boolean"},"storage.classic":{"type":"boolean"}}}],"metadata":{"grail":{"canonicalQuery":"data record(data = \"logs\", storage.grail = TRUE), record(data = \"DEM\", storage.grail = TRUE, storage.classic = TRUE)","timezone":"America/Bogota","query":"data record(data = \"logs\", storage.grail = true),\n     record(data = \"DEM\", storage.grail = true, storage.classic=true)","scannedRecords":0,"dqlVersion":"V1_0","scannedBytes":0,"scannedDataPoints":0,"locale":"en-US","executionTimeMilliseconds":2,"notifications":[],"queryId":"9eed1ce0-d53a-42b1-a372-1465f9e59dba","sampled":false}}},"notifications":[],"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"dateTime":"2025-07-29T18:27:01.876Z","input":{"timeframe":{"from":"now()-2h","to":"now()"},"value":"data record(data = \"logs\", storage.grail = true),\n     record(data = \"DEM\", storage.grail = true, storage.classic=true)"}},"state":"success","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"d46e0cac-8c3e-4013-9296-1811aabf0672","type":"markdown","markdown":"# [`describe`](https://docs.dynatrace.com/docs/shortlink/data-source-commands#describe)\n> Describe el esquema de datos para un objeto de datos determinado."},{"id":"72da8832-4cf5-4afa-acd7-fc44f7251d5e","type":"markdown","markdown":"🎯 Cuantas propiedades/fields conocidos tienen los `host` en este ambiente? Y listar por orden alfabetico.\n\n*Hints:*\n* Usar [Ordering commands](https://docs.dynatrace.com/docs/shortlink/ordering-commands)"},{"id":"a1e1d2f8-b07e-4bf9-a78c-b21802cfba63","type":"dql","filterSegments":[],"drilldownPath":[],"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-2h","to":"now()"},"value":""},"visualizationSettings":{"chartSettings":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"9e0e3516-8596-4231-b594-e5f58af79503","type":"markdown","markdown":"# [`fetch`](https://docs.dynatrace.com/docs/shortlink/data-source-commands#fetch)\n> Carga datos del recurso especificado."},{"id":"f86645d4-c0fb-4195-9015-9d868124e2ee","type":"markdown","markdown":"🎯 Listar los host. Mostar solo `nombre`, `ip` y `tags`.\n\n*Hints:*\n* Usar el resultado de la query anterior.\n* Usar [`Selection and modification commands`](https://docs.dynatrace.com/docs/shortlink/selection-and-modification-commands)"},{"id":"2d2c155f-8b8b-4079-ab98-aae756d3f53f","type":"dql","filterSegments":[],"drilldownPath":[],"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-2h","to":"now()"},"value":""},"visualizationSettings":{"chartSettings":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"eeedfb24-713d-4595-9ddb-7f31a64a241d","type":"markdown","markdown":"# [`timeseries`](https://docs.dynatrace.com/docs/shortlink/data-source-commands#fetch)\n> Cargar, filtrar y agregar datos de métricas en una salida de time series."},{"id":"7bea84a9-8e63-4445-a4d6-0c37c4b097ce","type":"markdown","markdown":"🎯 Tiempo del tiempo de respuesta promedio (ms) del servicio con mayor cantidad de peticiones de las últimas 24h.\n\n*Hints:*\n* Usar [Array functions](https://docs.dynatrace.com/docs/shortlink/array-functions)"},{"id":"d7035d8e-137a-4c82-a859-68822fcbd1d8","type":"dql","filterSegments":[],"drilldownPath":[],"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-24h","to":"now()"},"value":""},"visualizationSettings":{"chartSettings":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"691d5927-812c-4ce7-a96c-e674b23d08c9","type":"markdown","markdown":"🎯 Agregar a la query anterior el uso promedio de cpu `dt.kubernetes.container.cpu_usage` del container de los servicios que corran en k8s.\n\n*Hints:*\n* Usar [Correlation and join commands](https://docs.dynatrace.com/docs/shortlink/correlation-and-join-commands)"},{"id":"50955d50-6580-4b5e-86b8-524833a3348a","type":"dql","filterSegments":[],"drilldownPath":[],"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-24h","to":"now()"},"value":""},"visualizationSettings":{"chartSettings":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"98fe6d05-b9f9-4131-8254-5bbb9a375f63","type":"dql","filterSegments":[],"drilldownPath":[],"height":187,"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-24h","to":"now()"},"value":"describe dt.entity.service\n| filter in(data_types, \"record\")"},"visualizationSettings":{"autoSelectVisualization":false,"thresholds":[],"chartSettings":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"visualization":"recordView","result":{"code":200,"value":{"records":[{"field":"instantiates","data_types":["record"]},{"field":"belongs_to","data_types":["record"]},{"field":"serviceDetectionAttributes","data_types":["record"]},{"field":"clustered_by","data_types":["record"]},{"field":"sends_to","data_types":["record"]},{"field":"receives_from","data_types":["record"]},{"field":"called_by","data_types":["record"]},{"field":"indirectly_sends_to","data_types":["record"]},{"field":"contains","data_types":["record"]},{"field":"runs_on","data_types":["record"]},{"field":"icon","data_types":["record"]},{"field":"groups","data_types":["record"]},{"field":"indirectly_receives_from","data_types":["record"]},{"field":"calls","data_types":["record"]}],"types":[{"indexRange":[0,13],"mappings":{"field":{"type":"string"},"data_types":{"type":"array","types":[{"indexRange":[0,0],"mappings":{"element":{"type":"string"}}}]}}}],"metadata":{"grail":{"canonicalQuery":"describe dt.entity.service\n| filter in(data_types, \"record\")","timezone":"America/Bogota","query":"describe dt.entity.service\n| filter in(data_types, \"record\")","scannedRecords":0,"dqlVersion":"V1_0","scannedBytes":0,"scannedDataPoints":0,"analysisTimeframe":{"start":"2025-07-28T18:27:01.333000000Z","end":"2025-07-29T18:27:01.333000000Z"},"locale":"en-US","executionTimeMilliseconds":8,"notifications":[],"queryId":"a2bcfc07-1237-4456-9b01-44b83fcab213","sampled":false}}},"notifications":[],"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"dateTime":"2025-07-29T18:27:02.047Z","input":{"timeframe":{"from":"now()-24h","to":"now()"},"value":"describe dt.entity.service\n| filter in(data_types, \"record\")"}},"state":"success","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"8a20572b-e028-4cde-bc0a-b8b17c1d4ba3","type":"markdown","markdown":"## Best Practices"},{"id":"1aa04902-6abe-4390-b268-f01dac264f03","type":"markdown","markdown":"# 1. Filtar al inicio.\n"},{"id":"41d33ccb-b477-4496-9360-be92f1ac4955","type":"markdown","markdown":">  ⌛ El **rendimiento** general de las consultas mejora enormemente al reducir el conjunto de datos antes de continuar con el procesamiento. \n\n> 💰 Segmentar la data para filtar por `dt.system.bucket`  y reducir el costo de la query."},{"id":"794c8c86-d47a-49fe-a402-3da28b71479d","type":"dql","filterSegments":[],"drilldownPath":[],"height":84,"showInput":true,"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-30d","to":"now()"},"value":"fetch events\n| filter event.kind == \"SYNTHETIC_EVENT\"\n| summarize count = count(), by:{event.type}"},"visualizationSettings":{"autoSelectVisualization":false,"thresholds":[],"chartSettings":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"visualization":"table","result":{"code":200,"value":{"records":[{"event.type":"batch_status","count":"5828"},{"event.type":"browser_monitor_execution","count":"5791"},{"event.type":"http_monitor_execution","count":"50731"},{"event.type":"http_step_execution","count":"50732"},{"event.type":"http_step_execution_details","count":"50732"},{"event.type":"on_demand_execution","count":"17386"}],"types":[{"indexRange":[0,5],"mappings":{"event.type":{"type":"string"},"count":{"type":"long"}}}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.kind == \"SYNTHETIC_EVENT\"\n| summarize by:{event.type}, count = count()","timezone":"America/Bogota","query":"fetch events\n| filter event.kind == \"SYNTHETIC_EVENT\"\n| summarize count = count(), by:{event.type}","scannedRecords":12574436,"dqlVersion":"V1_0","scannedBytes":1940418829,"scannedDataPoints":0,"analysisTimeframe":{"start":"2025-06-29T18:27:01.335000000Z","end":"2025-07-29T18:27:01.335000000Z"},"locale":"en-US","executionTimeMilliseconds":551,"notifications":[],"queryId":"d696b56d-671f-435d-a2b8-c084f702df82","sampled":false}}},"notifications":[],"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"dateTime":"2025-07-29T18:27:02.832Z","input":{"timeframe":{"from":"now()-30d","to":"now()"},"value":"fetch events\n| filter event.kind == \"SYNTHETIC_EVENT\"\n| summarize count = count(), by:{event.type}"}},"state":"success","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"341c10b3-dbdc-4f9f-9a74-3865d73832de","type":"dql","filterSegments":[],"drilldownPath":[],"height":96,"showInput":true,"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-30d","to":"now()"},"value":"fetch events\n| filter dt.system.bucket ==\"default_synthetic_events\"\n| filter event.kind == \"SYNTHETIC_EVENT\"\n| summarize count = count(), by:{event.type}"},"visualizationSettings":{"autoSelectVisualization":false,"thresholds":[],"chartSettings":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"visualization":"table","result":{"code":200,"value":{"records":[{"event.type":"batch_status","count":"5828"},{"event.type":"browser_monitor_execution","count":"5791"},{"event.type":"http_monitor_execution","count":"50731"},{"event.type":"http_step_execution","count":"50732"},{"event.type":"on_demand_execution","count":"17386"}],"types":[{"indexRange":[0,4],"mappings":{"event.type":{"type":"string"},"count":{"type":"long"}}}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter dt.system.bucket == \"default_synthetic_events\"\n| filter event.kind == \"SYNTHETIC_EVENT\"\n| summarize by:{event.type}, count = count()","timezone":"America/Bogota","query":"fetch events\n| filter dt.system.bucket ==\"default_synthetic_events\"\n| filter event.kind == \"SYNTHETIC_EVENT\"\n| summarize count = count(), by:{event.type}","scannedRecords":130810,"dqlVersion":"V1_0","scannedBytes":157175676,"scannedDataPoints":0,"analysisTimeframe":{"start":"2025-06-29T18:27:01.338000000Z","end":"2025-07-29T18:27:01.338000000Z"},"locale":"en-US","executionTimeMilliseconds":550,"notifications":[],"queryId":"19be3cac-be2d-4d0c-9439-7911256f86ad","sampled":false}}},"notifications":[],"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"dateTime":"2025-07-29T18:27:02.909Z","input":{"timeframe":{"from":"now()-30d","to":"now()"},"value":"fetch events\n| filter dt.system.bucket ==\"default_synthetic_events\"\n| filter event.kind == \"SYNTHETIC_EVENT\"\n| summarize count = count(), by:{event.type}"}},"state":"success","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"a60ea9e7-605e-48a7-be89-a718378698a0","type":"markdown","markdown":"# 2. Reducir el rango de tiempo de consulta (si aplica)"},{"id":"c9162be4-8de2-4970-bdfc-86e148be5c76","type":"markdown","markdown":"> ⌛💰 De esta forma se escanea menos data y reduce el costo de la query."},{"id":"e3353a4d-8ba6-44e9-a409-876d3ba503d9","type":"markdown","markdown":"# 3. Nombres de campos que se deben evitar\n* true\n* false\n* null\n* mod\n* and\n* or\n* xor\n* not\n"},{"id":"1f56b063-7712-405f-83c6-bbe55caf9f75","type":"dql","title":"❌","filterSegments":[],"drilldownPath":[],"height":77,"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-24h","to":"now()"},"value":"data record(`true`=\"ejemplo\")"},"visualizationSettings":{"autoSelectVisualization":false,"thresholds":[],"chartSettings":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"visualization":"table","result":{"value":{"records":[{"true":"ejemplo"}],"types":[{"indexRange":[0,0],"mappings":{"true":{"type":"string"}}}],"metadata":{"grail":{"canonicalQuery":"data record(`true` = \"ejemplo\")","timezone":"America/Bogota","query":"data record(`true`=\"ejemplo\")","scannedRecords":0,"dqlVersion":"V1_0","scannedBytes":0,"scannedDataPoints":0,"locale":"en-US","executionTimeMilliseconds":2,"notifications":[],"queryId":"264ed1e0-7ba8-407e-b0c6-a5ff316c93e3","sampled":false}}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"code":200,"notifications":[],"dateTime":"2025-07-29T18:27:01.918Z","input":{"timeframe":{"from":"now()-24h","to":"now()"},"value":"data record(`true`=\"ejemplo\")"}},"state":"success","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"a2508b2e-2c85-47f6-b272-5a7718db3764","type":"markdown","markdown":"## 4. Usar métricas\n> 💰 Si la data ya esta ingestada como métrica, usala.\n\n> 💰 Si utilizas comandos `summarize` o `makeTimeseries` crea métricas a a partir de logs, events, etc."},{"id":"469934ff-ffee-45ac-b356-2ea8d65373ec","type":"markdown","markdown":"## 5. Utilizar opciones para limitar la cantidad de datos escaneados (Logs | Spans⚠️)\n"},{"id":"eaa43610-37e6-469d-92d6-12656e6aba65","type":"dql","title":" exception message","filterSegments":[],"drilldownPath":[],"height":374,"showInput":false,"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-1h","to":"now()"},"value":"fetch spans\n\n// only spans which contain a span event of type \"exception\"\n| filter iAny(span.events[][span_event.name] == \"exception\")\n| expand span.events | fields span.events | fieldsFlatten span.events | fieldsRemove span.events\n\n| summarize count = count(), by:{ span.events.exception.message}\n| sort count desc"},"visualizationSettings":{"chartSettings":{"truncationMode":"middle","categoryOverrides":{},"categoricalBarChartSettings":{"valueAxis":["count"],"valueAxisLabel":"count","categoryAxis":["span.events.exception.message"],"categoryAxisLabel":"span.events.exception.message"},"circleChartSettings":{"valueType":"relative","groupingThresholdType":"relative"}},"autoSelectVisualization":false,"thresholds":[]},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"visualization":"donutChart","result":{"code":200,"value":{"records":[{"span.events.exception.message":"13 INTERNAL: failed to charge card: could not charge the card: rpc error: code = Unknown desc = PaymentService Fail Feature Flag Enabled","count":"876"},{"span.events.exception.message":"Since symfony/http-foundation 5.1: Passing a non-scalar value as 2nd argument to \"Symfony\\Component\\HttpFoundation\\InputBag::get()\" is deprecated, pass a scalar or null instead.","count":"602"},{"span.events.exception.message":"Cannot insert explicit value for identity column in table 'Trades' when IDENTITY_INSERT is set to OFF.","count":"560"},{"span.events.exception.message":"Since symfony/http-foundation 5.1: Retrieving a non-scalar value from \"Symfony\\Component\\HttpFoundation\\InputBag::get()\" is deprecated, and will throw a \"Symfony\\Component\\HttpFoundation\\Exception\\BadRequestException\" exception in Symfony 6.0, use \"S","count":"281"},{"span.events.exception.message":"PaymentService Fail Feature Flag Enabled","count":"221"},{"span.events.exception.message":"An error occurred while saving the entity changes. See the inner exception for details.","count":"206"},{"span.events.exception.message":"One or more errors occurred. (Cannot insert explicit value for identity column in table 'Trades' when IDENTITY_INSERT is set to OFF.)","count":"148"},{"span.events.exception.message":null,"count":"114"},{"span.events.exception.message":"failed to charge card: could not charge the card: rpc error: code = Code(400) desc = Credit card info is invalid","count":"48"},{"span.events.exception.message":"Status(StatusCode=\"FailedPrecondition\", Detail=\"Can't access cart storage. System.ApplicationException: Wasn't able to connect to redis\n   at cartservice.cartstore.ValkeyCartStore.EnsureRedisConnected() in /usr/src/app/src/cartstore/ValkeyCartStore.cs:line 79\n   at cartservice.cartstore.ValkeyCartStore.EmptyCartAsync(String userId) in /usr/src/app/src/cartstore/ValkeyCartStore.cs:line 157\")","count":"47"},{"span.events.exception.message":"null","count":"40"},{"span.events.exception.message":"failed to charge card: could not charge the card: rpc error: code = Code(400) desc = Sorry, we cannot process mir credit cards. Only VISA or MasterCard is accepted.","count":"36"},{"span.events.exception.message":"Credit card info is invalid","count":"24"},{"span.events.exception.message":"Sorry, we cannot process mir credit cards. Only VISA or MasterCard is accepted.","count":"18"},{"span.events.exception.message":"HTTP 404 setStatus called","count":"13"},{"span.events.exception.message":"Bio for user with id '1060' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '1667' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '2450' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '262' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '2666' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '2976' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '3262' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '3743' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '5694' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '6068' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '6247' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '6422' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '6948' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '6981' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '7772' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '7999' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '8240' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '8283' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '8817' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '9127' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '<masked>' not found","count":"3"},{"span.events.exception.message":"/tmp/img-<masked>.jpg (No such file or directory)","count":"2"}],"types":[{"indexRange":[0,36],"mappings":{"span.events.exception.message":{"type":"string"},"count":{"type":"long"}}}],"metadata":{"grail":{"canonicalQuery":"fetch spans\n| filter iAny(span.events[][span_event.name] == \"exception\")\n| expand span.events\n| fields span.events\n| fieldsFlatten span.events\n| fieldsRemove span.events\n| summarize by:{span.events.exception.message}, count = count()\n| sort count desc","timezone":"America/Bogota","query":"fetch spans\n\n// only spans which contain a span event of type \"exception\"\n| filter iAny(span.events[][span_event.name] == \"exception\")\n| expand span.events | fields span.events | fieldsFlatten span.events | fieldsRemove span.events\n\n| summarize count = count(), by:{ span.events.exception.message}\n| sort count desc","scannedRecords":3439974,"dqlVersion":"V1_0","scannedBytes":488214435,"scannedDataPoints":0,"analysisTimeframe":{"start":"2025-07-29T17:27:01.342000000Z","end":"2025-07-29T18:27:01.342000000Z"},"locale":"en-US","executionTimeMilliseconds":163,"notifications":[],"queryId":"b00c0641-3c93-4a52-8af5-5b1c849a3fba","sampled":false}}},"notifications":[],"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"dateTime":"2025-07-29T18:27:02.069Z","input":{"timeframe":{"from":"now()-1h","to":"now()"},"value":"fetch spans\n\n// only spans which contain a span event of type \"exception\"\n| filter iAny(span.events[][span_event.name] == \"exception\")\n| expand span.events | fields span.events | fieldsFlatten span.events | fieldsRemove span.events\n\n| summarize count = count(), by:{ span.events.exception.message}\n| sort count desc"}},"state":"success","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"b87431d3-7663-4c61-b970-d0be2eead153","type":"dql","title":"exception message","filterSegments":[],"drilldownPath":[],"height":374,"showInput":false,"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-1h","to":"now()"},"value":"fetch spans, scanLimitGBytes:1\n\n// only spans which contain a span event of type \"exception\"\n| filter iAny(span.events[][span_event.name] == \"exception\")\n| expand span.events | fields span.events | fieldsFlatten span.events | fieldsRemove span.events\n\n| summarize count = count(), by:{ span.events.exception.message}\n| sort count desc"},"visualizationSettings":{"chartSettings":{"truncationMode":"middle","categoryOverrides":{},"categoricalBarChartSettings":{"valueAxis":["count"],"valueAxisLabel":"count","categoryAxis":["span.events.exception.message"],"categoryAxisLabel":"span.events.exception.message"},"circleChartSettings":{"valueType":"relative","groupingThresholdType":"relative"}},"autoSelectVisualization":false,"thresholds":[]},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"visualization":"donutChart","result":{"code":200,"value":{"records":[{"span.events.exception.message":"13 INTERNAL: failed to charge card: could not charge the card: rpc error: code = Unknown desc = PaymentService Fail Feature Flag Enabled","count":"876"},{"span.events.exception.message":"Since symfony/http-foundation 5.1: Passing a non-scalar value as 2nd argument to \"Symfony\\Component\\HttpFoundation\\InputBag::get()\" is deprecated, pass a scalar or null instead.","count":"602"},{"span.events.exception.message":"Cannot insert explicit value for identity column in table 'Trades' when IDENTITY_INSERT is set to OFF.","count":"560"},{"span.events.exception.message":"Since symfony/http-foundation 5.1: Retrieving a non-scalar value from \"Symfony\\Component\\HttpFoundation\\InputBag::get()\" is deprecated, and will throw a \"Symfony\\Component\\HttpFoundation\\Exception\\BadRequestException\" exception in Symfony 6.0, use \"S","count":"281"},{"span.events.exception.message":"PaymentService Fail Feature Flag Enabled","count":"221"},{"span.events.exception.message":"An error occurred while saving the entity changes. See the inner exception for details.","count":"206"},{"span.events.exception.message":"One or more errors occurred. (Cannot insert explicit value for identity column in table 'Trades' when IDENTITY_INSERT is set to OFF.)","count":"148"},{"span.events.exception.message":null,"count":"114"},{"span.events.exception.message":"failed to charge card: could not charge the card: rpc error: code = Code(400) desc = Credit card info is invalid","count":"48"},{"span.events.exception.message":"Status(StatusCode=\"FailedPrecondition\", Detail=\"Can't access cart storage. System.ApplicationException: Wasn't able to connect to redis\n   at cartservice.cartstore.ValkeyCartStore.EnsureRedisConnected() in /usr/src/app/src/cartstore/ValkeyCartStore.cs:line 79\n   at cartservice.cartstore.ValkeyCartStore.EmptyCartAsync(String userId) in /usr/src/app/src/cartstore/ValkeyCartStore.cs:line 157\")","count":"47"},{"span.events.exception.message":"null","count":"40"},{"span.events.exception.message":"failed to charge card: could not charge the card: rpc error: code = Code(400) desc = Sorry, we cannot process mir credit cards. Only VISA or MasterCard is accepted.","count":"36"},{"span.events.exception.message":"Credit card info is invalid","count":"24"},{"span.events.exception.message":"Sorry, we cannot process mir credit cards. Only VISA or MasterCard is accepted.","count":"18"},{"span.events.exception.message":"HTTP 404 setStatus called","count":"13"},{"span.events.exception.message":"Bio for user with id '1060' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '1667' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '2450' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '262' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '2666' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '2976' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '3262' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '3743' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '5694' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '6068' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '6247' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '6422' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '6948' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '6981' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '7772' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '7999' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '8240' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '8283' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '8817' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '9127' not found","count":"3"},{"span.events.exception.message":"Bio for user with id '<masked>' not found","count":"3"},{"span.events.exception.message":"/tmp/img-<masked>.jpg (No such file or directory)","count":"2"}],"types":[{"indexRange":[0,36],"mappings":{"span.events.exception.message":{"type":"string"},"count":{"type":"long"}}}],"metadata":{"grail":{"canonicalQuery":"fetch spans, scanLimitGBytes:1\n| filter iAny(span.events[][span_event.name] == \"exception\")\n| expand span.events\n| fields span.events\n| fieldsFlatten span.events\n| fieldsRemove span.events\n| summarize by:{span.events.exception.message}, count = count()\n| sort count desc","timezone":"America/Bogota","query":"fetch spans, scanLimitGBytes:1\n\n// only spans which contain a span event of type \"exception\"\n| filter iAny(span.events[][span_event.name] == \"exception\")\n| expand span.events | fields span.events | fieldsFlatten span.events | fieldsRemove span.events\n\n| summarize count = count(), by:{ span.events.exception.message}\n| sort count desc","scannedRecords":3439974,"dqlVersion":"V1_0","scannedBytes":488214435,"scannedDataPoints":0,"analysisTimeframe":{"start":"2025-07-29T17:27:01.345000000Z","end":"2025-07-29T18:27:01.345000000Z"},"locale":"en-US","executionTimeMilliseconds":197,"notifications":[],"queryId":"b2b8fd92-ca96-48f3-b664-d05c666d8781","sampled":false}}},"notifications":[],"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"dateTime":"2025-07-29T18:27:01.955Z","input":{"timeframe":{"from":"now()-1h","to":"now()"},"value":"fetch spans, scanLimitGBytes:1\n\n// only spans which contain a span event of type \"exception\"\n| filter iAny(span.events[][span_event.name] == \"exception\")\n| expand span.events | fields span.events | fieldsFlatten span.events | fieldsRemove span.events\n\n| summarize count = count(), by:{ span.events.exception.message}\n| sort count desc"}},"state":"success","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"b6aa802b-3baa-44b7-810f-416b564ba287","type":"markdown","markdown":"## 6. Utilizar las opciones de muestreo disponibles (Logs | Spans⚠️)\nLos rangos de valores aplicables para el muestreo son:\n\n* 1: Default value (no sampling).\n* 10\n* 100\n* 1000\n* 10000: "},{"id":"dd42caba-a5f8-4950-9da9-3b099aa5c92f","type":"dql","filterSegments":[],"drilldownPath":[],"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-24h","to":"now()"},"value":"fetch logs, from:-7d, samplingRatio:100\n| summarize c = countIf(loglevel == \"ERROR\"), by:bin(timestamp, 3h)\n| fieldsAdd c = c*100"},"visualizationSettings":{"chartSettings":{"fieldMapping":{"leftAxisValues":["c"],"timestamp":"bin(timestamp, 3h)"}},"dataMapping":{"displayedFields":["c"]},"autoSelectVisualization":false,"thresholds":[]},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"visualization":"lineChart","result":{"code":200,"value":{"records":[{"bin(timestamp, 3h)":"2025-07-22T13:00:00.000000000-05:00","c":"57000"},{"bin(timestamp, 3h)":"2025-07-22T16:00:00.000000000-05:00","c":"66000"},{"bin(timestamp, 3h)":"2025-07-22T19:00:00.000000000-05:00","c":"66700"},{"bin(timestamp, 3h)":"2025-07-22T22:00:00.000000000-05:00","c":"66800"},{"bin(timestamp, 3h)":"2025-07-23T01:00:00.000000000-05:00","c":"74500"},{"bin(timestamp, 3h)":"2025-07-23T04:00:00.000000000-05:00","c":"61800"},{"bin(timestamp, 3h)":"2025-07-23T07:00:00.000000000-05:00","c":"61000"},{"bin(timestamp, 3h)":"2025-07-23T10:00:00.000000000-05:00","c":"67600"},{"bin(timestamp, 3h)":"2025-07-23T13:00:00.000000000-05:00","c":"67100"},{"bin(timestamp, 3h)":"2025-07-23T16:00:00.000000000-05:00","c":"66700"},{"bin(timestamp, 3h)":"2025-07-23T19:00:00.000000000-05:00","c":"67800"},{"bin(timestamp, 3h)":"2025-07-23T22:00:00.000000000-05:00","c":"67000"},{"bin(timestamp, 3h)":"2025-07-24T01:00:00.000000000-05:00","c":"62800"},{"bin(timestamp, 3h)":"2025-07-24T04:00:00.000000000-05:00","c":"64500"},{"bin(timestamp, 3h)":"2025-07-24T07:00:00.000000000-05:00","c":"41800"},{"bin(timestamp, 3h)":"2025-07-24T10:00:00.000000000-05:00","c":"11000"},{"bin(timestamp, 3h)":"2025-07-24T13:00:00.000000000-05:00","c":"11900"},{"bin(timestamp, 3h)":"2025-07-24T16:00:00.000000000-05:00","c":"10400"},{"bin(timestamp, 3h)":"2025-07-24T19:00:00.000000000-05:00","c":"11800"},{"bin(timestamp, 3h)":"2025-07-24T22:00:00.000000000-05:00","c":"8300"},{"bin(timestamp, 3h)":"2025-07-25T01:00:00.000000000-05:00","c":"11400"},{"bin(timestamp, 3h)":"2025-07-25T04:00:00.000000000-05:00","c":"11200"},{"bin(timestamp, 3h)":"2025-07-25T07:00:00.000000000-05:00","c":"11800"},{"bin(timestamp, 3h)":"2025-07-25T10:00:00.000000000-05:00","c":"10200"},{"bin(timestamp, 3h)":"2025-07-25T13:00:00.000000000-05:00","c":"11000"},{"bin(timestamp, 3h)":"2025-07-25T16:00:00.000000000-05:00","c":"9100"},{"bin(timestamp, 3h)":"2025-07-25T19:00:00.000000000-05:00","c":"11200"},{"bin(timestamp, 3h)":"2025-07-25T22:00:00.000000000-05:00","c":"11400"},{"bin(timestamp, 3h)":"2025-07-26T01:00:00.000000000-05:00","c":"10700"},{"bin(timestamp, 3h)":"2025-07-26T04:00:00.000000000-05:00","c":"11200"},{"bin(timestamp, 3h)":"2025-07-26T07:00:00.000000000-05:00","c":"11000"},{"bin(timestamp, 3h)":"2025-07-26T10:00:00.000000000-05:00","c":"21800"},{"bin(timestamp, 3h)":"2025-07-26T13:00:00.000000000-05:00","c":"15300"},{"bin(timestamp, 3h)":"2025-07-26T16:00:00.000000000-05:00","c":"10600"},{"bin(timestamp, 3h)":"2025-07-26T19:00:00.000000000-05:00","c":"10000"},{"bin(timestamp, 3h)":"2025-07-26T22:00:00.000000000-05:00","c":"9300"},{"bin(timestamp, 3h)":"2025-07-27T01:00:00.000000000-05:00","c":"10700"},{"bin(timestamp, 3h)":"2025-07-27T04:00:00.000000000-05:00","c":"11600"},{"bin(timestamp, 3h)":"2025-07-27T07:00:00.000000000-05:00","c":"9800"},{"bin(timestamp, 3h)":"2025-07-27T10:00:00.000000000-05:00","c":"8300"},{"bin(timestamp, 3h)":"2025-07-27T13:00:00.000000000-05:00","c":"11800"},{"bin(timestamp, 3h)":"2025-07-27T16:00:00.000000000-05:00","c":"10800"},{"bin(timestamp, 3h)":"2025-07-27T19:00:00.000000000-05:00","c":"6200"},{"bin(timestamp, 3h)":"2025-07-27T22:00:00.000000000-05:00","c":"6000"},{"bin(timestamp, 3h)":"2025-07-28T01:00:00.000000000-05:00","c":"4900"},{"bin(timestamp, 3h)":"2025-07-28T04:00:00.000000000-05:00","c":"9800"},{"bin(timestamp, 3h)":"2025-07-28T07:00:00.000000000-05:00","c":"10900"},{"bin(timestamp, 3h)":"2025-07-28T10:00:00.000000000-05:00","c":"10000"},{"bin(timestamp, 3h)":"2025-07-28T13:00:00.000000000-05:00","c":"11400"},{"bin(timestamp, 3h)":"2025-07-28T16:00:00.000000000-05:00","c":"10100"},{"bin(timestamp, 3h)":"2025-07-28T19:00:00.000000000-05:00","c":"10800"},{"bin(timestamp, 3h)":"2025-07-28T22:00:00.000000000-05:00","c":"17100"},{"bin(timestamp, 3h)":"2025-07-29T01:00:00.000000000-05:00","c":"19700"},{"bin(timestamp, 3h)":"2025-07-29T04:00:00.000000000-05:00","c":"17900"},{"bin(timestamp, 3h)":"2025-07-29T07:00:00.000000000-05:00","c":"18800"},{"bin(timestamp, 3h)":"2025-07-29T10:00:00.000000000-05:00","c":"20400"},{"bin(timestamp, 3h)":"2025-07-29T13:00:00.000000000-05:00","c":"4600"}],"types":[{"indexRange":[0,56],"mappings":{"bin(timestamp, 3h)":{"type":"timestamp"},"c":{"type":"long"}}}],"metadata":{"grail":{"canonicalQuery":"fetch logs, from:-7d, samplingRatio:100\n| summarize by:{bin(timestamp, 3h)}, c = countIf(loglevel == \"ERROR\")\n| fieldsAdd c = c * 100","timezone":"America/Bogota","query":"fetch logs, from:-7d, samplingRatio:100\n| summarize c = countIf(loglevel == \"ERROR\"), by:bin(timestamp, 3h)\n| fieldsAdd c = c*100","scannedRecords":8925424,"dqlVersion":"V1_0","scannedBytes":19879181031,"scannedDataPoints":0,"analysisTimeframe":{"start":"2025-07-22T18:27:01.713236212Z","end":"2025-07-29T18:27:01.713236212Z"},"locale":"en-US","executionTimeMilliseconds":5153,"notifications":[{"severity":"INFO","messageFormat":"The parameters should be grouped with curly braces: {}.","syntaxPosition":{"start":{"column":50,"index":89,"line":2},"end":{"column":67,"index":106,"line":2}},"messageFormatSpecifierTypes":[],"arguments":[],"notificationType":"PARAMETERS_SHOULD_BE_GROUPED","message":"The parameters should be grouped with curly braces: {}."}],"queryId":"a57f5fe0-fc6d-4524-bed2-5145689f9ec7","sampled":true}}},"notifications":[{"severity":"info","messageFormat":"The parameters should be grouped with curly braces: {}.","syntaxPosition":{"start":{"column":50,"index":89,"line":2},"end":{"column":67,"index":106,"line":2}},"messageFormatSpecifierTypes":[],"arguments":[],"notificationType":"PARAMETERS_SHOULD_BE_GROUPED","message":"The parameters should be grouped with curly braces: {}."}],"dateTime":"2025-07-29T18:27:07.740Z","input":{"timeframe":{"from":"now()-24h","to":"now()"},"value":"fetch logs, from:-7d, samplingRatio:100\n| summarize c = countIf(loglevel == \"ERROR\"), by:bin(timestamp, 3h)\n| fieldsAdd c = c*100"},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false}},"state":"success","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"2f8a2de2-8429-4a4c-8324-ae4535ecd08b","type":"markdown","markdown":"## Learn DQL\n![](https://immebwtyjeilyl2quwb2kuo47pblazdk--wkf10640.prod2.apps.dynatrace.com/ui/assets/learn-dql-logo.svg)\n\n[Ir a la APP](https://wkf10640.apps.dynatrace.com/ui/apps/dynatrace.learndql/)"},{"id":"c7e9ddd0-da81-4da8-83c4-69ad80c05e85","type":"markdown","markdown":"---\n**Preguntas o feedback?**: [angelica.barranco@dynatrace.com](mailto:angelica.barranco@dynatrace.com?subject=Feedback%20on%20Grail)\n\nPara obtener más información sobre Dynatrace Query Language (DQL), vaya aquí:\n* [(Doc) Dynatrace Query Language (DQL)](https://docs.dynatrace.com/docs/shortlink/dql-dynatrace-query-language-hub)\n* [(Doc) DQL commands](https://docs.dynatrace.com/docs/shortlink/dql-commands-overview)\n* [(Video) A Practical Guide to DQL](https://www.youtube.com/watch?v=F2VbVqNlswk)\n* [(APP) Learn DQL](https://wkf10640.apps.dynatrace.com/ui/apps/dynatrace.learndql/)"}]}